(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{445:function(s,t,a){"use strict";a.r(t);var n=a(15),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[t("a",{attrs:{href:"#mysql-%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84%E7%AE%80%E4%BB%8B"}},[s._v("Mysql 逻辑架构简介")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E5%9B%BE"}},[s._v("整体架构图")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E8%BF%9E%E6%8E%A5%E5%B1%82"}},[s._v("连接层")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%9C%8D%E5%8A%A1%E5%B1%82"}},[s._v("服务层")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%BC%95%E6%93%8E%E5%B1%82"}},[s._v("引擎层")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%AD%98%E5%82%A8%E5%B1%82"}},[s._v("存储层")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#show-profile"}},[s._v("show profile")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%A4%A7%E8%87%B4%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%B5%81%E7%A8%8B"}},[s._v("大致的查询流程")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#sql%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F"}},[s._v("SQL的执行顺序")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E"}},[s._v("存储引擎")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E6%A6%82%E8%BF%B0"}},[s._v("存储引擎概述")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%90%84%E7%A7%8D%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E7%89%B9%E6%80%A7"}},[s._v("各种存储引擎特性")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#innodb"}},[s._v("InnoDB")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#myisam"}},[s._v("MyISAM")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#memory"}},[s._v("MEMORY")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#merge"}},[s._v("MERGE")])])])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#sql-%E9%A2%84%E7%83%AD"}},[s._v("SQL 预热")])])]),s._v(" "),t("h2",{attrs:{id:"mysql-逻辑架构简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-逻辑架构简介"}},[s._v("#")]),s._v(" Mysql 逻辑架构简介")]),s._v(" "),t("h3",{attrs:{id:"整体架构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整体架构图"}},[s._v("#")]),s._v(" 整体架构图")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/540235-20160927083854563-2139392246.jpg",alt:"img"}})]),s._v(" "),t("p",[s._v("和其它数据库相比，MySQL 有点与众不同，它的架构可以在多种不同场景中应用并发挥良好作用。主要体现在存储引擎的架构上，插件式的存储引擎架构将查询处理和其它的系统任务以及数据的存储提取相分离。这种架构可 以根据业务的需求和实际需要选择合适的存储引擎。")]),s._v(" "),t("p",[t("strong",[s._v("各层介绍：")])]),s._v(" "),t("h4",{attrs:{id:"连接层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接层"}},[s._v("#")]),s._v(" 连接层")]),s._v(" "),t("p",[s._v("最上层是一些客户端和连接服务，包含本地 sock 通信和大多数基于客户端/服务端工具实现的类似于 tcp/ip 的通信。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证 安全接入的客户端提供线程。同样在该层上可以实现基于 SSL 的安全链接。服务器也会为安全接入的每个客户端验 证它所具有的操作权限。")]),s._v(" "),t("h4",{attrs:{id:"服务层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务层"}},[s._v("#")]),s._v(" 服务层")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Management Serveices & Utilities")]),s._v(" "),t("p",[s._v("系统管理和控制工具")])]),s._v(" "),t("li",[t("p",[s._v("SQL Interface")]),s._v(" "),t("p",[s._v("SQL 接口。接受用户的 SQL 命令，并且返回用户需要查询的结果。比如 select from 就是调用 SQL Interface")])]),s._v(" "),t("li",[t("p",[s._v("Parser")]),s._v(" "),t("p",[s._v("解析器。 SQL 命令传递到解析器的时候会被解析器验证和解析")])]),s._v(" "),t("li",[t("p",[s._v("Optimizer")]),s._v(" "),t("p",[s._v("查询优化器。 SQL 语句在查询之前会使用查询优化器对查询进行优化，比如有 where 条件时，优化器来决定先投影还是先过滤。")])]),s._v(" "),t("li",[t("p",[s._v("Cache 和 Buffer")]),s._v(" "),t("p",[s._v("查询缓存。如果查询缓存有命中的查询结果，查询语句就可以直接去查询缓存中取数据。这个缓存机制是由一系列小缓存组成的。比如表缓存，记录缓存，key 缓存， 权限缓存等")]),s._v(" "),t("p",[s._v("注：mysql 8.X 取消了查询缓存")])])]),s._v(" "),t("h4",{attrs:{id:"引擎层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引擎层"}},[s._v("#")]),s._v(" 引擎层")]),s._v(" "),t("p",[s._v("存储引擎层，存储引擎真正的负责了 MySQL 中数据的存储和提取，服务器通过 API 与存储引擎进行通信。不同 的存储引擎具有的功能不同，这样我们可以根据自己的实际需要进行选取。")]),s._v(" "),t("h4",{attrs:{id:"存储层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储层"}},[s._v("#")]),s._v(" 存储层")]),s._v(" "),t("p",[s._v("数据存储层，主要是将数据存储在运行于裸设备的文件系统之上，并完成与存储引擎的交互。")]),s._v(" "),t("h3",{attrs:{id:"show-profile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#show-profile"}},[s._v("#")]),s._v(" show profile")]),s._v(" "),t("p",[s._v("利用 show profile 可以查看 sql 的执行周期！")]),s._v(" "),t("p",[t("strong",[s._v("开启 profile")])]),s._v(" "),t("p",[s._v("查看 profile 是否开启：show variables like '%profiling%'")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show variables like "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%profiling%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+------------------------+-------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Variable_name          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+------------------------+-------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" have_profiling         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" profiling              "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" OFF   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" profiling_history_size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+------------------------+-------+\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" rows "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("如果没有开启，可以执行 set profiling=1 开启！")]),s._v(" "),t("p",[t("strong",[s._v("使用 profile")])]),s._v(" "),t("p",[s._v("执行 "),t("code",[s._v("show profiles;")]),s._v("  命令，可以查看最近的几次查询。")]),s._v(" "),t("p",[s._v("根据 "),t("code",[s._v("Query_ID")]),s._v("，可以进一步执行 "),t("code",[s._v("show profile cpu,block io for query Query_id")]),s._v(" 来查看 sql 的具体执行步骤。")]),s._v(" "),t("h3",{attrs:{id:"大致的查询流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大致的查询流程"}},[s._v("#")]),s._v(" 大致的查询流程")]),s._v(" "),t("p",[s._v("mysql 的查询流程大致是：")]),s._v(" "),t("p",[s._v("mysql 客户端通过协议与 mysql 服务器建连接，发送查询语句，先检查查询缓存，如果命中，直接返回结果， 否则进行语句解析,也就是说，在解析查询之前，服务器会先访问查询缓存(query cache)——它存储 SELECT 语句以及 相应的查询结果集。如果某个查询结果已经位于缓存中，服务器就不会再对查询进行解析、优化、以及执行。它仅仅将缓存中的结果返回给用户即可，这将大大提高系统的性能。")]),s._v(" "),t("p",[s._v("语法解析器和预处理：首先 mysql 通过关键字将 SQL 语句进行解析，并生成一颗对应的“解析树”。mysql 解析器将使用 mysql 语法规则验证和解析查询；预处理器则根据一些 mysql 规则进一步检查解析数是否合法。")]),s._v(" "),t("p",[s._v("查询优化器当解析树被认为是合法的了，并且由优化器将其转化成执行计划。一条查询可以有很多种执行方式， 最后都返回相同的结果。优化器的作用就是找到这其中最好的执行计划。")]),s._v(" "),t("p",[s._v("然后，mysql 默认使用的 BTREE 索引，并且一个大致方向是：无论怎么折腾 sql，至少在目前来说，mysql 最多只用到表中的一个索引。")]),s._v(" "),t("h3",{attrs:{id:"sql的执行顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql的执行顺序"}},[s._v("#")]),s._v(" SQL的执行顺序")]),s._v(" "),t("p",[s._v("手写的顺序：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/image-20210520161848827.png",alt:"image-20210520161848827"}})]),s._v(" "),t("p",[s._v("真正执行的顺序：")]),s._v(" "),t("p",[s._v("​\t\t随着 Mysql 版本的更新换代，其优化器也在不断的升级，优化器会分析不同执行顺序产生的性能消耗不同而动 态调整执行顺序。下面是经常出现的查询顺序：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/image-20210520161931864.png",alt:"image-20210520161931864"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/image-20210520164022838.png",alt:"image-20210520164022838"}})]),s._v(" "),t("h2",{attrs:{id:"存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[s._v("#")]),s._v(" 存储引擎")]),s._v(" "),t("h3",{attrs:{id:"存储引擎概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎概述"}},[s._v("#")]),s._v(" 存储引擎概述")]),s._v(" "),t("p",[s._v("和大多数的数据库不同, MySQL中有一个存储引擎的概念, 针对不同的存储需求可以选择最优的存储引擎。")]),s._v(" "),t("p",[s._v("​\t存储引擎就是存储数据，建立索引，更新查询数据等等技术的实现方式 。存储引擎是基于表的，而不是基于库的。所以存储引擎也可被称为表类型。")]),s._v(" "),t("p",[s._v("​\tOracle，SqlServer等数据库只有一种存储引擎。MySQL提供了插件式的存储引擎架构。所以MySQL存在多种存储引擎，可以根据需要使用相应引擎，或者编写存储引擎。")]),s._v(" "),t("p",[s._v("​\tMySQL5.0支持的存储引擎包含 ： InnoDB 、MyISAM 、BDB、MEMORY、MERGE、EXAMPLE、NDB Cluster、ARCHIVE、CSV、BLACKHOLE、FEDERATED等，其中InnoDB和BDB提供事务安全表，其他存储引擎是非事务安全表。")]),s._v(" "),t("p",[s._v("通过指令查询当前数据库支持的存储引擎 ：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" engines\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1551186043529.png",alt:"1551186043529"}})]),s._v(" "),t("p",[s._v("创建新表时如果不指定存储引擎，那么系统就会使用默认的存储引擎，MySQL5.5之前的默认存储引擎是MyISAM，5.5之后就改为了InnoDB。")]),s._v(" "),t("p",[s._v("查看Mysql数据库默认的存储引擎 ， 指令 ：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%storage_engine%'")]),s._v(" ； \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556086372754.png",alt:"1556086372754"}})]),s._v(" "),t("h3",{attrs:{id:"各种存储引擎特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#各种存储引擎特性"}},[s._v("#")]),s._v(" 各种存储引擎特性")]),s._v(" "),t("p",[s._v("下面重点介绍几种常用的存储引擎， 并对比各个存储引擎之间的区别， 如下表所示 ：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("特点")]),s._v(" "),t("th",[s._v("InnoDB")]),s._v(" "),t("th",[s._v("MyISAM")]),s._v(" "),t("th",[s._v("MEMORY")]),s._v(" "),t("th",[s._v("MERGE")]),s._v(" "),t("th",[s._v("NDB")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("存储限制")]),s._v(" "),t("td",[s._v("64TB")]),s._v(" "),t("td",[s._v("有")]),s._v(" "),t("td",[s._v("有")]),s._v(" "),t("td",[s._v("没有")]),s._v(" "),t("td",[s._v("有")])]),s._v(" "),t("tr",[t("td",[s._v("事务安全")]),s._v(" "),t("td",[t("strong",[s._v("支持")])]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("锁机制")]),s._v(" "),t("td",[t("strong",[s._v("行锁(适合高并发)")])]),s._v(" "),t("td",[t("strong",[s._v("表锁")])]),s._v(" "),t("td",[s._v("表锁")]),s._v(" "),t("td",[s._v("表锁")]),s._v(" "),t("td",[s._v("行锁")])]),s._v(" "),t("tr",[t("td",[s._v("B树索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("哈希索引")]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("全文索引")]),s._v(" "),t("td",[s._v("支持(5.6版本之后)")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("集群索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("数据索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td"),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td"),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("索引缓存")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("数据可压缩")]),s._v(" "),t("td"),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("空间使用")]),s._v(" "),t("td",[s._v("高")]),s._v(" "),t("td",[s._v("低")]),s._v(" "),t("td",[s._v("N/A")]),s._v(" "),t("td",[s._v("低")]),s._v(" "),t("td",[s._v("低")])]),s._v(" "),t("tr",[t("td",[s._v("内存使用")]),s._v(" "),t("td",[s._v("高")]),s._v(" "),t("td",[s._v("低")]),s._v(" "),t("td",[s._v("中等")]),s._v(" "),t("td",[s._v("低")]),s._v(" "),t("td",[s._v("高")])]),s._v(" "),t("tr",[t("td",[s._v("批量插入速度")]),s._v(" "),t("td",[s._v("低")]),s._v(" "),t("td",[s._v("高")]),s._v(" "),t("td",[s._v("高")]),s._v(" "),t("td",[s._v("高")]),s._v(" "),t("td",[s._v("高")])]),s._v(" "),t("tr",[t("td",[s._v("支持外键")]),s._v(" "),t("td",[t("strong",[s._v("支持")])]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td")])])]),s._v(" "),t("p",[s._v("下面我们将重点介绍最长使用的两种存储引擎： InnoDB、MyISAM ， 另外两种 MEMORY、MERGE ， 了解即可。")]),s._v(" "),t("h4",{attrs:{id:"innodb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[s._v("#")]),s._v(" InnoDB")]),s._v(" "),t("p",[s._v("InnoDB 存储引擎是 Mysql 的默认存储引擎。")]),s._v(" "),t("p",[s._v("InnoDB存储引擎提供了具有提交、回滚、崩溃恢复能力的事务安全。但是对比 MyISAM 的存储引擎，InnoDB 写的处理效率差一些，并且会占用更多的磁盘空间以保留数据和索引。")]),s._v(" "),t("p",[s._v("InnoDB 存储引擎不同于其他存储引擎的特点 ：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("事务控制")]),s._v(" "),t("p",[s._v("**")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" goods_innodb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("innodb")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transaction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" goods_innodb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Meta20'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556075130115.png",alt:"1556075130115"}})]),s._v(" "),t("p",[s._v("测试发现在 InnoDB 中是存在事务的 ；")])]),s._v(" "),t("li",[t("p",[s._v("外键约束")]),s._v(" "),t("p",[s._v("MySQL支持外键的存储引擎只有 InnoDB ， 在创建外键的时候， 要求父表必须有对应的索引 ，子表在创建外键的时候，也会自动的创建对应的索引。")]),s._v(" "),t("p",[s._v("下面两张表中 ， country_innodb 是父表 ， country_id 为主键索引，city_innodb 表是子表，country_id 字段为外键，对应于 country_innodb 表的主键 country_id 。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" country_innodb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tcountry_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    country_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("country_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city_innodb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tcity_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    city_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    country_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("city_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" idx_fk_country_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("country_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONSTRAINT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("fk_city_country"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOREIGN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("country_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REFERENCES")]),s._v(" country_innodb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("country_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RESTRICT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASCADE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" country_innodb "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'China'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'America'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Japan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" city_innodb "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Xian'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NewYork'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BeiJing'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("在创建索引时， 可以指定在删除、更新父表时，对子表进行的相应操作，包括 RESTRICT、CASCADE、SET NULL 和 NO ACTION。")]),s._v(" "),t("p",[s._v("RESTRICT 和NO ACTION 相同， 是指限制在子表有关联记录的情况下， 父表不能更新；")]),s._v(" "),t("p",[s._v("CASCADE 表示父表在更新或者删除时，更新或者删除子表对应的记录；")]),s._v(" "),t("p",[s._v("SET NULL 则表示父表在更新或者删除的时候，子表的对应字段被SET NULL 。")]),s._v(" "),t("p",[s._v("针对上面创建的两个表， 子表的外键指定是ON DELETE RESTRICT ON UPDATE CASCADE 方式的， 那么在主表删除记录的时候， 如果子表有对应记录， 则不允许删除， 主表在更新记录的时候， 如果子表有对应记录， 则子表对应更新 。")]),s._v(" "),t("p",[s._v("表中数据如下图所示 ：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556087540767.png",alt:"1556087540767"}})]),s._v(" "),t("p",[s._v("查看外键信息")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city_innodb "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556087611295.png",alt:"1556087611295"}})]),s._v(" "),t("p",[s._v("删除 country_id为 1 的 country 数据，有外键时会删除失败")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556087719145.png",alt:"1556087719145"}})]),s._v(" "),t("p",[s._v("更新主表country表的字段 country_id 时")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" country_innodb "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" country_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" country_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556087759615.png",alt:"1556087759615"}})]),s._v(" "),t("p",[s._v("更新后， 子表的数据信息为 ：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556087793738.png",alt:"1556087793738"}})])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("存储方式")])]),s._v(" "),t("p",[s._v("InnoDB 存储表和索引有以下两种方式 ：")]),s._v(" "),t("p",[s._v("①. 使用共享表空间存储， 这种方式创建的表的表结构保存在 "),t("code",[s._v(".frm")]),s._v("文件中， 数据和索引保存在 innodb_data_home_dir 和 innodb_data_file_path 定义的表空间中，可以是多个文件。")]),s._v(" "),t("p",[s._v("②. 使用多表空间存储， 这种方式创建的表的表结构仍然存在 "),t("code",[s._v(".frm")]),s._v(" 文件中，但是每个表的数据和索引单独保存在 "),t("code",[s._v(".ibd")]),s._v(" 中。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556075336630.png",alt:"1556075336630"}})])])]),s._v(" "),t("h4",{attrs:{id:"myisam"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#myisam"}},[s._v("#")]),s._v(" MyISAM")]),s._v(" "),t("p",[s._v("MyISAM 不支持事务、也不支持外键，其优势是访问的速度快，对事务的完整性没有要求或者以SELECT、INSERT为主的应用基本上都可以使用这个引擎来创建表 。有以下两个比较重要的特点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("不支持事务")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" goods_myisam"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\tname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("myisam "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1551347590309.png",alt:"1551347590309"}})]),s._v(" "),t("p",[s._v("通过测试，我们发现，在MyISAM存储引擎中，是没有事务控制的 ；")])]),s._v(" "),t("li",[t("p",[s._v("文件存储方式")]),s._v(" "),t("p",[s._v("每个MyISAM在磁盘上存储成3个文件，其文件名都和表名相同，但拓展名分别是 ：")]),s._v(" "),t("p",[s._v(".frm (存储表定义)；")]),s._v(" "),t("p",[s._v(".MYD(MYData , 存储数据)；")]),s._v(" "),t("p",[s._v(".MYI(MYIndex , 存储索引)；")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556075073836.png",alt:"1556075073836"}})])])]),s._v(" "),t("h4",{attrs:{id:"memory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memory"}},[s._v("#")]),s._v(" MEMORY")]),s._v(" "),t("p",[s._v("​\tMemory存储引擎将表的数据存放在内存中。每个MEMORY表实际对应一个磁盘文件，格式是.frm ，该文件中只存储表的结构，而其数据文件，都是存储在内存中，这样有利于数据的快速处理，提高整个表的效率。MEMORY 类型的表访问非常地快，因为他的数据是存放在内存中的，并且默认使用HASH索引 ， 但是服务一旦关闭，表中的数据就会丢失。")]),s._v(" "),t("h4",{attrs:{id:"merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[s._v("#")]),s._v(" MERGE")]),s._v(" "),t("p",[s._v("​\tMERGE存储引擎是一组MyISAM表的组合，这些MyISAM表必须结构完全相同，MERGE表本身并没有存储数据，对MERGE类型的表可以进行查询、更新、删除操作，这些操作实际上是对内部的MyISAM表进行的。")]),s._v(" "),t("p",[s._v("​\t对于MERGE类型表的插入操作，是通过INSERT_METHOD子句定义插入的表，可以有3个不同的值，使用FIRST 或 LAST 值使得插入操作被相应地作用在第一或者最后一个表上，不定义这个子句或者定义为NO，表示不能对这个MERGE表执行插入操作。")]),s._v(" "),t("p",[s._v("​\t可以对MERGE表进行DROP操作，但是这个操作只是删除MERGE表的定义，对内部的表是没有任何影响的。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1556076359503.png",alt:"1556076359503"}})]),s._v(" "),t("p",[t("strong",[s._v("下面是一个创建和使用MERGE表的示例 ：")])]),s._v(" "),t("p",[s._v("1）. 创建3个测试表 order_1990, order_1991, order_all , 其中 order_all 是前两个表的 MERGE 表 ：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" order_1990"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    order_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    order_money "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    order_address "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("order_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" myisam "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" order_1991"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    order_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    order_money "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    order_address "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("order_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" myisam "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" order_all"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    order_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    order_money "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    order_address "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("order_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("merge")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("order_1990"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("order_1991"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" INSERT_METHOD"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LAST")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("2）. 分别向两张表中插入记录")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" order_1990 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'北京'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" order_1990 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'上海'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" order_1991 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'北京'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" order_1991 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'上海'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("3）. 查询3张表中的数据。")]),s._v(" "),t("p",[s._v("order_1990中的数据 ：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1551408083254.png",alt:"1551408083254"}})]),s._v(" "),t("p",[s._v("order_1991中的数据 ：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1551408133323.png",alt:"1551408133323"}})]),s._v(" "),t("p",[s._v("order_all中的数据 ：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1551408216185.png",alt:"1551408216185"}})]),s._v(" "),t("p",[s._v("4）. 往order_all中插入一条记录 ，由于在MERGE表定义时，INSERT_METHOD 选择的是LAST，那么插入的数据会想最后一张表中插入。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" order_all "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'西安'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/1551408519889.png",alt:"1551408519889"}})]),s._v(" "),t("h2",{attrs:{id:"sql-预热"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-预热"}},[s._v("#")]),s._v(" SQL 预热")]),s._v(" "),t("p",[s._v("常见的 Join 查询图")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://testingcf.jsdelivr.net/gh/oddfar/static/img/MySQL%E9%AB%98%E7%BA%A7.assets/image-20210520162731111.png",alt:"image-20210520162731111"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);